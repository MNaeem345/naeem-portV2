{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samin\\\\Desktop\\\\Personal Projects\\\\New Portfolio website\\\\naeem-portV2\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../components/Contact.css';\nimport { Container, Card } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [notification, setNotification] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  useEffect(() => {\n    // Enable the button only if all fields are filled\n    if (name && email && message) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [name, email, message]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = 'service_12vgaf6';\n    const templateId = 'template_05auu48';\n    const publicKey = 'Q8aXS-35nP58vu20J';\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      to_name: 'Web Wizard',\n      message: message\n    };\n\n    // Send the email using EmailJS\n    emailjs.send(serviceId, templateId, templateParams, publicKey).then(response => {\n      if (response.status === 200) {\n        setNotification('Email sent successfully!');\n      } else {\n        setNotification('Failed to send email.');\n      }\n      console.log('Email sent successfully!', response);\n      setName('');\n      setEmail('');\n      setMessage('');\n    }).catch(error => {\n      setNotification('Error sending email.');\n      console.error('Error sending email:', error);\n    });\n    setTimeout(() => {\n      setNotification('');\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"contact\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ab-me\",\n          children: \"Contact Me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"form-card\",\n          children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: notification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"emailForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Your Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              className: \"email-name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Your Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              className: \"email-email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              cols: \"30\",\n              rows: \"10\",\n              value: message,\n              placeholder: \"write a message\",\n              onChange: e => setMessage(e.target.value),\n              className: \"email-msg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"email-btn\",\n              disabled: isButtonDisabled,\n              children: \"Send Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"JY6QHfrsILlWzyqS3eVykI9np2w=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","Container","Card","useState","useEffect","useForm","emailjs","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","message","setMessage","notification","setNotification","isButtonDisabled","setIsButtonDisabled","handleSubmit","e","preventDefault","serviceId","templateId","publicKey","templateParams","from_name","from_email","to_name","send","then","response","status","console","log","catch","error","setTimeout","id","children","maxWidth","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","cols","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Samin/Desktop/Personal Projects/New Portfolio website/naeem-portV2/src/components/Contact.js"],"sourcesContent":["import React from 'react';\r\nimport '../components/Contact.css';\r\nimport { Container, Card } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nfunction Contact() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [notification, setNotification] = useState('');\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n      // Enable the button only if all fields are filled\r\n      if (name && email && message) {\r\n        setIsButtonDisabled(false);\r\n      } else {\r\n        setIsButtonDisabled(true);\r\n      }\r\n    }, [name, email, message]);\r\n  \r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      // Your EmailJS service ID, template ID, and Public Key\r\n      const serviceId = 'service_12vgaf6';\r\n      const templateId = 'template_05auu48';\r\n      const publicKey = 'Q8aXS-35nP58vu20J';\r\n  \r\n      // Create a new object that contains dynamic template params\r\n      const templateParams = {\r\n        from_name: name,\r\n        from_email: email,\r\n        to_name: 'Web Wizard',\r\n        message: message,\r\n      };\r\n  \r\n      // Send the email using EmailJS\r\n      emailjs.send(serviceId, templateId, templateParams, publicKey)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            setNotification('Email sent successfully!');\r\n          } else {\r\n            setNotification('Failed to send email.');\r\n          }\r\n          console.log('Email sent successfully!', response);\r\n          setName('');\r\n          setEmail('');\r\n          setMessage('');\r\n        })\r\n        .catch((error) => {\r\n          setNotification('Error sending email.');\r\n          console.error('Error sending email:', error);\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setNotification('');\r\n        }, 5000);\r\n    }\r\n  \r\n\r\n  return (\r\n    <section id='contact'>\r\n    <div>\r\n\r\n    \r\n    <Container maxWidth=\"md\">\r\n        <h1 className='ab-me'>Contact Me!</h1>\r\n    </Container>\r\n    <Container maxWidth=\"xs\">\r\n    <Card className='form-card'>\r\n    {notification && <div className='notification'>{notification}</div>}\r\n    <form onSubmit={handleSubmit} className='emailForm'>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className='email-name'\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Your Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className='email-email'\r\n        />\r\n        <textarea\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          value={message}\r\n          placeholder=\"write a message\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className='email-msg'\r\n        >\r\n        </textarea>\r\n        <button type=\"submit\" className='email-btn' disabled={isButtonDisabled}>Send Email</button>\r\n      </form>\r\n      </Card>\r\n    </Container>\r\n    \r\n    </div>\r\n    \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}